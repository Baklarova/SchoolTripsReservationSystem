@model AllExcursionsModel


@{
    ViewData["Title"] = "All Excursions";
}

<h2 class="text-center">@ViewData["Title"]</h2>
<hr />


<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Region"></label>
                <select asp-for="Region" class="form-control">
                    <option value="">All</option>
                    @foreach (var region in Model.Regions)
                    {
                        <option value="@region">@region</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Lowest price first</option>
                    <option value="2">Longest duration first</option>
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>


@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalExcursionsCount /
        Model.ExcursionsPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Excursion"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Region"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)"><<</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Excursions.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Excursion"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Region"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">>></a>
    </div>
</div>

@if (!Model.Excursions.Any())
{
    <h2 class="text-center">No excursions found by the given criteria!</h2>
}

<div class="row">
    @foreach (var excursion in Model.Excursions)
    {
        <partial name="_ExcursionPartial" model="@excursion" />
    }
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
